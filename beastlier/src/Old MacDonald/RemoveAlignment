from lxml import etree

def run(inFileName, outFileName, fileNameRoot):

    parser = etree.XMLParser(remove_blank_text=True)

    fullTree = etree.parse(open(inFileName), parser)

    beastElement = fullTree.getroot()

    mcmcElement = beastElement.find("mcmc")
    mcmcElement.set("chainLength", "500000000")
    mcmcElement.set("operatorAnalysis", fileNameRoot+".ops.txt")



    wccBlock = beastElement.find("caseToCaseTransmissionLikelihood").find("withinCaseCoalescent")
    wccBlock.set("truncate", "true")

    for sequenceElement in beastElement.iter("sequence"):

        sequenceElement.find("taxon").tail = "???"

    for logBlock in beastElement.iter('log'):
        logBlock.set("logEvery", "50000")

        if logBlock.get('id')=='fileLog':
            logBlock.set('fileName',fileNameRoot+".log.txt")
        elif logBlock.get('id')=='networkLog':
            logBlock.set('fileName',fileNameRoot+".net.txt")

    for treeLogBlock in beastElement.iter('logTree'):
        treeLogBlock.set("logEvery", "50000")
        treeLogBlock.set('fileName', fileNameRoot+".trees.txt")

    patternsBlock = beastElement.find('patterns')
    beastElement.remove(patternsBlock)

    tlBlock = beastElement.find('treeLikelihood')

    for child in tlBlock:
        if child.tag=="patterns":
            tlBlock.remove(child)
            alignmentElement = etree.SubElement(tlBlock,'alignment')
            alignmentElement.set('idref', 'alignment')



    et = etree.ElementTree(beastElement)

    et.write(outFileName, pretty_print=True)






def main():
    for i in range(1,101):
        inFileName = "../slow_10/wcc_X_" + str(i) + "_slow_10.xml"
        outFileName = "wcc_X_" + str(i) + "_prior_6.xml"
        fileNameRoot = "wcc_X_" + str(i) + "_prior_6"
        run(inFileName, outFileName, fileNameRoot)



if __name__ == '__main__':
    main()


